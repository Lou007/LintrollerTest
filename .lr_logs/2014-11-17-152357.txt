FINAL RESULTS:
/home/lou/Desktop/FinalTest/TestDocs/flawtest.c:17:  [5] (buffer) strncat: 
  Easily used incorrectly (e.g., incorrectly computing the correct maximum 
  size to add) (CWE-120). Consider strcat_s, strlcat, or automatically 
  resizing strings. Risk is high; the length parameter appears to be a 
  constant, instead of computing the number of characters left. 
/home/lou/Desktop/FinalTest/TestDocs/flawtest.c:18:  [5] (buffer) _tcsncat: 
  Easily used incorrectly (e.g., incorrectly computing the correct maximum 
  size to add) (CWE-120). Consider strcat_s, strlcat, or automatically 
  resizing strings. Risk is high; the length parameter appears to be a 
  constant, instead of computing the number of characters left. 
/home/lou/Desktop/FinalTest/TestDocs/flawtest.c:21:  [5] (buffer) MultiByteToWideChar: 
  Requires maximum length in CHARACTERS, not bytes (CWE-120). Risk is high, 
  it appears that the size is given as bytes, but the function requires size 
  as characters. 
/home/lou/Desktop/FinalTest/TestDocs/flawtest.c:10:  [4.0] (buffer) _mbscpy: 
  Does not check for buffer overflows when copying to destination (CWE-120). 
  Consider using a function version that stops copying at the end of the 
  buffer. 
/home/lou/Desktop/FinalTest/TestDocs/flawtest.c:13:  [4.0] (buffer) lstrcat: 
  Does not check for buffer overflows when concatenating to destination 
  (CWE-120). 
/home/lou/Desktop/FinalTest/TestDocs/flawtest.c:6:  [2.0] (buffer) char: 
  Statically-sized arrays can be improperly restricted, + leading to 
  potential overflows or other issues (CWE-119:CWE-120). Perform bounds 
  checking, use functions that limit length, + or ensure that the size is 
  larger than the maximum possible length. 
/home/lou/Desktop/FinalTest/TestDocs/flawtest.c:7:  [2.0] (buffer) char: 
  Statically-sized arrays can be improperly restricted, + leading to 
  potential overflows or other issues (CWE-119:CWE-120). Perform bounds 
  checking, use functions that limit length, + or ensure that the size is 
  larger than the maximum possible length. 
/home/lou/Desktop/FinalTest/TestDocs/flawtest.c:11:  [2.0] (buffer) memcpy: 
  Does not check for buffer overflows when copying to destination (CWE-120). 
  Make sure destination can always hold the source data. 
/home/lou/Desktop/FinalTest/TestDocs/flawtest.c:12:  [2.0] (buffer) CopyMemory: 
  Does not check for buffer overflows when copying to destination (CWE-120). 
  Make sure destination can always hold the source data. 
/home/lou/Desktop/FinalTest/TestDocs/flawtest.c:14:  [1.0] (buffer) strncpy: 
  Easily used incorrectly; doesn't always \\0-terminate or + check for 
  invalid pointers (CWE-120). 
/home/lou/Desktop/FinalTest/TestDocs/flawtest.c:15:  [1.0] (buffer) _tcsncpy: 
  Easily used incorrectly; doesn't always \\0-terminate or + check for 
  invalid pointers (CWE-120). 
/home/lou/Desktop/FinalTest/TestDocs/flawtest.c:16:  [1.0] (buffer) strncat: 
  Easily used incorrectly (e.g., incorrectly computing the correct maximum 
  size to add) (CWE-120). Consider strcat_s, strlcat, or automatically 
  resizing strings. 
/home/lou/Desktop/FinalTest/TestDocs/flawtest.c:19:  [1.0] (buffer) strlen: 
  Does not handle strings that are not \\0-terminated; if given one it may 
  perform an over-read (it could cause a crash if unprotected) (CWE-126). 
/home/lou/Desktop/FinalTest/TestDocs/flawtest.c:23:  [1] (buffer) MultiByteToWideChar: 
  Requires maximum length in CHARACTERS, not bytes (CWE-120). Risk is very 
  low, the length appears to be in characters not bytes. 


COPYRIGHT INFO:
/home/lou/Desktop/FinalTest/TestDocs/flawtest.c: Incorrect


ANALYSIS SUMMARY:
Hits = 14
Lines analyzed = 26 in approximately 0.10 seconds (259 lines/second)
Physical Source Lines of Code (SLOC) = 25
Hits@level = [0]   0 [1]   5 [2]   4 [3]   0 [4]   2 [5]   3
Hits@level+ = [0+]  14 [1+]  14 [2+]   9 [3+]   5 [4+]   5 [5+]   3
Hits/KSLOC@level+ = [0+] 560 [1+] 560 [2+] 360 [3+] 200 [4+] 200 [5+] 120
Dot directories skipped = 5 (--followdotdir overrides)
